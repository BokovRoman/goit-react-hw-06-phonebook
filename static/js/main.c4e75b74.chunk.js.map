{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","redux/contacts/contacts-actions.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Section/Section.js","components/ContactForm/ContactForm.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","add","createAction","name","number","payload","id","shortid","generate","remove","changeFilter","getVisibleContacts","items","filter","normalizedFilter","toLowerCase","contact","includes","connect","contacts","dispatch","onDeleteContact","contactsActions","className","styles","list","map","item","button","type","onClick","state","value","onChange","e","target","label","input","Section","title","children","container","text","protoTypes","PropTypes","string","isRequired","INITIAL_STATE","ContactForm","handleChange","setState","handleSubmit","preventDefault","includesContact","props","find","onSubmit","reset","alert","this","form","pattern","required","Component","App","createReducer","actions","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c4e75b74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1i8oc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__F_cCA\",\"input\":\"Filter_input___zXZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Section_text__1qfy3\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const add = createAction(\"contact/add\", (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const remove = createAction(\"contacts/remove\");\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './ContactList.module.css';\r\nimport * as contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map(({id,name,number})=> (\r\n                    <li key={id} className={styles.item}>\r\n                    <p>{name}: {number}</p>\r\n                    <button className={styles.button} type=\"button\"\r\n                    onClick={() => onDeleteContact(id)}>Delete</button>\r\n                    </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n        .isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (items, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(contactsActions.remove(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport * as contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n        className={styles.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Section.module.css';\r\n\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <h2 className={styles.text}>{title}\r\n            </h2>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nSection.protoTypes = {\r\n    title:PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Section;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from './ContactForm.module.css';\r\nimport * as contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  // handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   const { name, number } = this.state;\r\n  //   this.props.onSubmit(name, number);\r\n  //   this.reset();\r\n  // };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const { contacts } = this.props;\r\n    const includesContact = contacts.find((contact) => contact.name === name);\r\n\r\n    if (!includesContact) {\r\n      this.props.onSubmit(name, number);\r\n      this.reset();\r\n      return;\r\n    }\r\n\r\n    alert(`${includesContact.name} is already in contacts`);\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n            <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) => dispatch(contactsActions.add(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport Section from \"./components/Section/Section\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\n\n\n// class App extends Component {\n\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filter: '',\n//   };\n  \n//   addContact = (name, number) => {\n//     const newContact = {\n//       id: shortid.generate(),\n//       name,\n//       number,\n//     };\n//     const { contacts } = this.state;\n//     const includesContact = contacts.find(\n//       (contact) => contact.name === newContact.name\n//     );\n\n//     includesContact\n//       ? alert(`${includesContact.name} is already in contacts`)\n//       : this.setState(({ contacts }) => ({\n//           contacts: [...contacts,newContact],\n//         }));\n//   };\n\n//   changeFilter = (e) => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n\n//    visibleContacts = () => {\n//     const { filter, contacts } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(normalizedFilter)\n//     );\n//    };\n  \n//   deleteContact = (contactId) => {\n//        this.setState(({ contacts }) => ({\n//       contacts: contacts.filter((contact) => contact.id !== contactId),\n//     }));\n//   };\n\n//   componentDidMount() {\n//     const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     // console.log('componentDidUpdate');\n//     if (this.state.contacts !== prevState.contacts) {\n//       // console.log('Update field contacts');\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   render() {\n//     const { filter } = this.state;\n\nconst App = () => {\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n};\n\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.add]: (state, { payload }) => [...state, payload],\r\n  [actions.remove]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n// import logger from \"redux-logger\";\r\n\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"phoneBook\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport App from \"./App\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__27UUE\",\"label\":\"ContactForm_label__bsQaC\",\"button\":\"ContactForm_button__LH6-i\"};"],"sourceRoot":""}